// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
namespace BabysitterKata
{
	public class Babysitter
	{
		//Time properties to be used for comparisons and calculations
		private int startTime;
		private int endTime;
		private int bedTime;

		//Method to set babysitter startTime, also checks to make sure the time is valid
		public int SetStartTime(int inputTime)
		{
			if(inputTime >= 0 && inputTime <= 0400)
				inputTime += 2400;

			if(inputTime < 1700)
				return -1;

			startTime = inputTime;
			return inputTime;
		}

		//Method to set babysitter endTime, also checks to make sure the time is valid
		public int SetEndTime(int inputTime)
		{
			if(inputTime >= 0 && inputTime <= 0400)
				inputTime += 2400;

			if(inputTime < startTime || inputTime > 2800 || (inputTime > 0400 && inputTime < 1700))
				return -1;

			endTime = inputTime;
			return inputTime;
		}

		//Method to set babysitter bedTime, also checks to make sure the time is valid.
		//Currently has to be set after both start and end time
		public int SetBedTime(int inputTime)
		{
			if(inputTime >= 0 && inputTime <= 0400)
				inputTime += 2400;

			if(inputTime > endTime || inputTime < startTime)
				return -1;

			bedTime = inputTime;
			return inputTime;
		}

		//Method used to calculate pay, currently has to be used after setting other times...
		public int CalculatePay(int inputStartTime, int inputEndTime, int inputBedTime)
		{
			this.SetStartTime(inputStartTime);
			this.SetEndTime(inputEndTime);
			this.SetBedTime(inputBedTime);

			if(startTime == endTime)
				return 0;

			int startToBedTimeHours = (startTime < 2400 && bedTime < 2400) ? (bedTime - startTime) / 100 : (startTime < 2400) ? (2400 - startTime) / 100 : 0;
			int bedTimeToMidnightHours = endTime < 2400 ? (endTime - bedTime) / 100 : (2400 - bedTime) / 100;
			int midnightToEndOfJobHours = startTime > 2400 ? (endTime - startTime) / 100 : (endTime - 2400) / 100;

			if(startToBedTimeHours < 0)
				startToBedTimeHours = 0;
			if(bedTimeToMidnightHours < 0)
				bedTimeToMidnightHours = 0;
			if(midnightToEndOfJobHours < 0)
				midnightToEndOfJobHours = 0;

			return startToBedTimeHours * 12 + bedTimeToMidnightHours * 8 + midnightToEndOfJobHours * 16;
		}
	}
}

